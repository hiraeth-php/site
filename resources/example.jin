; This is an example JIN file

[section]

	; Null becomes native null

	field0 = null

	; Strings

	field1 = A string value.

	field2 = (
		A multi-line
		string value is also
		possible.
	)

	; Integers become native integer

	field3 = 1

	; Floats become native floats

	field4 = 3.14

	; Booleans become native booleans

	field5 = true

	; Arrays, note: trailing commas are fine

	field6 = [
		"item1",
		"item2",
		"item3",
	]

	; Objects, note: trailing commas are fine

	field7 = {
		"key1": "item1",
		"key2": "item2",
	}

	; Subsections use & to reference the parent

	[&.subsection]

		field8 = "quoted strings can have semicolons (;)"

		; Add more &s to keep going

		[&&.subsubsection]

			; Functions, note run() is sandboxed for safety
			; Returns result eval'd in host language (PHP)

			field9 = env(TIMEZONE)

			field10 = run($app->getEnvironment('TIMEZONE'))

[classes]

	; No need to escape a slash in JSON values
	; But... you can't do other escapes, e.g. \n, \t

	field11 = ["My\Namespaced\Class"]

[templates]

	; Definitions a template for use with map() and inc()

	field12 = def(var1, var2, var3) {
		[$var1, $var2, $var3]
	}

	; For multiple entries, each line maps to template

	field13 = map(templates.field12) {
		Tab		Separated	Array
		Of		Other		Arrays
	}

	; For a single entry, each line maps to arg

	field14 = inc(templates.field12) {
		New Line
		Separated
		Templating
	}
